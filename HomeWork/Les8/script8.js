// - Створити функцію конструктор для об'єктів User з полями id, name, surname , email, phone

function User(id, name, surname, email, phone) {
    this.id = id;
    this.name = name;
    this.surname = surname;
    this.email = email;
    this.phone = phone;
}

let user = new User(11, 'kolya', 'pupkin', 'pupkin@gmail.com', 0993572985);
console.log(user);
// створити пустий масив, наповнити його 10 об'єктами new User(....)
let arrUser = [
    new User(31, 'kolya', 'pupkin', 'pupkin@gmail.com', 0992372985),
    new User(11, 'vasya', 'surkin', 'surkin@gmail.com', 0992372985),
    new User(16, 'dima', 'gulkin', 'gulkin@gmail.com', 0992374485),
    new User(12,'ivan','ivanov','ivanov@gmail.com',09899334857),
    new User(48,'gregory','bilyak','bilyak@gmail.com', 0634563345),
    new User(99, 'mike','adamov','adamov@gmail.com',0678983452),
    new User(13,'galina' ,'petrova','petrova@gmail.com',0634567898),
    new User(77,'tanya','sinisa','sinisa@gmail.com',0635462134),
    new User(76,'petro','pyatochkin','pyatochkin@gmail.com',0998329988),
    new User(33,'rafael','redukevich','redukevich@gmail.com',0934488992)
]

console.log(arrUser);
// - Взяти масив з  User[] з попереднього завдання, та відфільтрувати , залишивши тільки об'єкти з парними id (filter)
let filtr=arrUser.filter((item=>item.id%2===0));
console.log(filtr);

// - Взяти масив з  User[] з попереднього завдання, та відсортувати його по id. по зростанню (sort)
let sort=arrUser.sort((a,b)=>a.id-b.id)
console.log(sort);

// - створити класс для об'єктів Client з полями id, name, surname , email, phone, order (поле є масивом зі списком товарів)
// створити пустий масив, наповнити його 10 об'єктами Client
// - Взяти масив (Client [] з попереднього завдання).Відсортувати його по кількості товарів в полі order по зростанню. (sort)
//
//
// - Створити функцію конструктор яка дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
// - (Те саме, тільки через клас)
// Створити клас який дозволяє створювати об'єкти car, з властивостями модель, виробник, рік випуску, максимальна швидкість, об'єм двигуна. додати в об'єкт функції:
// -- drive () - яка виводить в консоль `їдемо зі швидкістю ${максимальна швидкість} на годину`
// -- info () - яка виводить всю інформацію про автомобіль в форматі `назва поля - значення поля`
// -- increaseMaxSpeed (newSpeed) - яка підвищує значення максимальної швидкості на значення newSpeed
// -- changeYear (newValue) - змінює рік випуску на значення newValue
// -- addDriver (driver) - приймає об'єкт який "водій" з довільним набором полів, і додає його в поточний об'єкт car
//
//
//
// -створити класс/функцію конструктор попелюшка з полями ім'я, вік, розмір ноги. Створити масив з 10 попелюшок.
// Сторити об'єкт класу "принц" за допомоги класу який має поля ім'я, вік, туфелька яку він знайшов.
//     За допомоги циклу знайти яка попелюшка повинна бути з принцом.
//     Додатково, знайти необхідну попелюшку за допомоги функції масиву find та відповідного колбеку